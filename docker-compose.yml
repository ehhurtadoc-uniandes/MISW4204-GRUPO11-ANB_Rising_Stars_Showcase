version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: anb_postgres
    environment:
      POSTGRES_DB: anb_db
      POSTGRES_USER: anb_user
      POSTGRES_PASSWORD: anb_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - anb_network
    restart: unless-stopped

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: anb_redis
    ports:
      - "6379:6379"
    networks:
      - anb_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # FastAPI Application
  api:
    build: .
    container_name: anb_api
    environment:
      - DATABASE_URL=postgresql://anb_user:anb_password@postgres:5432/anb_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=anb_user
      - POSTGRES_PASSWORD=anb_password
      - POSTGRES_DB=anb_db
    volumes:
      - ./uploads:/app/uploads
      - ./processed_videos:/app/processed_videos
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - anb_network
    restart: unless-stopped

  # Celery Worker
  worker:
    build: .
    container_name: anb_worker
    environment:
      - DATABASE_URL=postgresql://anb_user:anb_password@postgres:5432/anb_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./uploads:/app/uploads
      - ./processed_videos:/app/processed_videos
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - anb_network
    restart: unless-stopped
    command: >
      sh -c "
        sleep 15 &&
        celery -A app.workers.celery_app worker --loglevel=info --concurrency=2 --queues=video_queue
      "

  # Celery Flower (Optional - for monitoring)
  flower:
    build: .
    container_name: anb_flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - redis
    networks:
      - anb_network
    restart: unless-stopped
    command: >
      sh -c "
        sleep 20 &&
        celery -A app.workers.celery_app flower --port=5555
      "

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: anb_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./processed_videos:/var/www/processed_videos:ro
    depends_on:
      - api
    networks:
      - anb_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  anb_network:
    driver: bridge