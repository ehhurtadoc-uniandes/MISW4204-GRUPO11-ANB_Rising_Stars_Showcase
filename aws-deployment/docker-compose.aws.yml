version: '3.8'

services:
  # FastAPI Application
  api:
    build: .
    container_name: anb_api
    environment:
      - DATABASE_URL=postgresql://anb_user:${DB_PASSWORD}@${RDS_ENDPOINT}:5432/anb_db
      - REDIS_URL=redis://${REDIS_ENDPOINT}:6379/0
      - CELERY_BROKER_URL=redis://${REDIS_ENDPOINT}:6379/0
      - CELERY_RESULT_BACKEND=redis://${REDIS_ENDPOINT}:6379/0
      - POSTGRES_HOST=${RDS_ENDPOINT}
      - POSTGRES_PORT=5432
      - POSTGRES_USER=anb_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=anb_db
      - NFS_SERVER_IP=${NFS_SERVER_IP}
      - ENVIRONMENT=production
      - DEBUG=false
    volumes:
      - /mnt/nfs/uploads:/app/uploads
      - /mnt/nfs/processed_videos:/app/processed_videos
      - /mnt/nfs/assets:/app/assets
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    networks:
      - anb_network
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (local instance for development/testing)
  redis:
    image: redis:7-alpine
    container_name: anb_redis_local
    ports:
      - "6379:6379"
    networks:
      - anb_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    profiles:
      - local-redis  # Only start when explicitly requested

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: anb_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /mnt/nfs/processed_videos:/var/www/processed_videos:ro
    depends_on:
      - api
    networks:
      - anb_network
    restart: unless-stopped

volumes:
  redis_data:

networks:
  anb_network:
    driver: bridge
